* ugit: DIY Git in Python
* cli: Add argument parser
* init: Create new .ugit directory
* hash-object: Save object
* cat-file: Print hashed objects
* data: Add types to objects
* Add base module
* write-tree: List files
* write-tree: Ignore .ugit files
* write-tree: Hash the files
* write-tree: Write tree objects
* read-tree: Extract tree from object
* read-tree: Delete all existing stuff before reading
* commit: Create commit
* commit: Record hash of last commit on HEAD
* commit: set parent to HEAD
* log: Implement
* log: Add oid parameter
* checkout: Read tree and move HEAD
* tag: Implement CLI command
* tag: Generalize HEAD to refs
* tag: Create the tag ref
* tag: Resolve name to oid in argparse
* base: Try different directories when searching for a ref
* cli: pass HEAD by default in argparse
* k: print refs
* k: Iterate commits and parents
* k: Render graph
* log: Use iter_commits_and_parents
* branch: Create new branch
* data: Implement symbolic refs idea
* data: Create RefValue container
* data: Dereference refs when reading and writing
* data: Don't always dereference refs (for `ugit k`)
* data: Write symbolic refs
* checkout: Switch branches
* init: Set HEAD to master on init
* status: Print current branch name
* branch: Show all branches
* log: Show refs that point to each commit
* reset: Move HEAD
* show: Print commit message
* show: List changed files in commit
* show: Print diff of commit
* diff: Compare working tree to a commit
* status: Show changed files
* merge: Create command
* merge: Merge in working directory
* merge: Support multiple parents
* data: Delete refs
* merge: Record both parents on commit
* data: Iter over MERGE_HEAD if it exists
* merge-base: Compute common ancestor of a commit
* merge: Three-way merge
* merge: Fast-forward merge
* data: Allow git directory change
* fetch: Print remote refs
* fetch: Retrieve remote refs in a separate function
* fetch: Download remote ref values
* fetch: Download missing objects pointed by remote refs
* push: Naive implementation
* push: Send only missing objects
* push: Don't allow force push
* add: Record added files in the index
* add: Allow adding a directory
* write-tree: Write from the index instead of the working directory
* read-tree: Read into index instead of working directory
* status: Show staged and non-staged modified files
* diff: Add --cached option and take index into account
