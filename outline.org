* DONE ugit: DIY Git in Python
* DONE cli: Add argument parser
* DONE init: Create new .ugit directory
* DONE hash-object: Save object
* DONE cat-file: Print hashed objects
* DONE data: Add types to objects
* DONE Add base module
* DONE write-tree: List files
* DONE write-tree: Ignore .ugit files
* DONE write-tree: Hash the files
* DONE write-tree: Write tree objects
* TODO read-tree: Extract tree from object
* TODO read-tree: Delete all existing stuff before reading
* TODO commit: Create commit
* TODO commit: Record hash of last commit on HEAD
* TODO commit: set parent to HEAD
* TODO log: Implement
* TODO log: Add oid parameter
* TODO checkout: Read tree and move HEAD
* TODO tag: Implement CLI command
* TODO tag: Generalize HEAD to refs
* TODO tag: Create the tag ref
* TODO tag: Resolve name to oid in argparse
* TODO base: Try different directories when searching for a ref
* TODO cli: pass HEAD by default in argparse
* TODO k: print refs
* TODO k: Iterate commits and parents
* TODO k: Render graph
* TODO log: Use iter_commits_and_parents
* TODO branch: Create new branch
* TODO data: Implement symbolic refs idea
* TODO data: Create RefValue container
* TODO data: Dereference refs when reading and writing
* TODO data: Don't always dereference refs (for `ugit k`)
* TODO data: Write symbolic refs
* TODO checkout: Switch branches
* TODO init: Set HEAD to master on init
* TODO status: Print current branch name
* TODO branch: Show all branches
* TODO log: Show refs that point to each commit
* TODO reset: Move HEAD
* TODO show: Print commit message
* TODO show: List changed files in commit
* TODO show: Print diff of commit
* TODO diff: Compare working tree to a commit
* TODO status: Show changed files
* TODO merge: Create command
* TODO merge: Merge in working directory
* TODO merge: Support multiple parents
* TODO data: Delete refs
* TODO merge: Record both parents on commit
* TODO data: Iter over MERGE_HEAD if it exists
* TODO merge-base: Compute common ancestor of a commit
* TODO merge: Three-way merge
* TODO merge: Fast-forward merge
* TODO data: Allow git directory change
* TODO fetch: Print remote refs
* TODO fetch: Retrieve remote refs in a separate function
* TODO fetch: Download remote ref values
* TODO fetch: Download missing objects pointed by remote refs
* TODO push: Naive implementation
* TODO push: Send only missing objects
* TODO push: Don't allow force push
* TODO add: Record added files in the index
* TODO add: Allow adding a directory
* TODO write-tree: Write from the index instead of the working directory
* TODO read-tree: Read into index instead of working directory
* TODO status: Show staged and non-staged modified files
* TODO diff: Add --cached option and take index into account
